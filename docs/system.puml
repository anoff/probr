@startuml stack

skinparam file BorderColor #cc0033
skinparam BackgroundColor white

skinparam sequence {
  LifeLineBorderColor Green
  ArrowColor black
  ParticipantBorderColor black
  ParticipantBackgroundColor GreenYellow
  ParticipantFontColor black
}
skinparam actor {
  backgroundColor #cc0033
  borderColor #cc0033
}
skinparam activity {
  StartColor green
  BarColor black
  EndColor red
  BackgroundColor white
  DiamondBackgroundColor white
  DiamondBorderColor magenta
  BorderColor black
  ArrowColor black
}
skinparam cloud {
  borderColor lightgray
  backgroundColor white
}
skinparam interface {
  borderColor black
  backgroundColor #cc0033
}
skinparam component {
  borderColor #cc0033
  backgroundColor white
}
skinparam file {
  borderColor #cc0033
  backgroundColor white
}
skinparam queue {
  borderColor #cc0033
  backgroundColor white
}
skinparam artifact {
  borderColor #cc0033
  backgroundColor white
}
skinparam database {
  borderColor #cc0033
  backgroundColor white
}
skinparam agent {
  borderColor #cc0033
  backgroundColor white
}

skinparam defaulttextalignment center

frame "Local Network" as lan {
  node "Raspberry Pi" as host {
    component Docker as docker1 {
      artifact "influxdb\n<i>:8086" as influxdb
      artifact "telegraf" as telegraf
      artifact "grafana\n<i>:3000" as grafana
      artifact "traefik" as traefik
      artifact "mosquitto\n<i>:1883" as mosquitto
    }
  }

  node "probe#1" as p1 {
    component "microcontroller" as uc
    component "Temp+Humid sensor" as dht
    component "Gas sensor" as s_voc
    component "Light sensor" as s_l
    uc -left- dht
    uc -up- s_voc
    uc -up- s_l
  }
}

frame "Internet" as www {
  interface "https://mygrafana.domain.com" as grafana_www
  interface "http://myinfluxdb.domain.com" as influx_www
}

actor User
User --( grafana_www
telegraf --(0 influxdb
traefik -- grafana_www
traefik -- influx_www
traefik -(0 grafana
traefik -(0 influxdb
telegraf -(0 mosquitto

uc --(0 mosquitto
@enduml